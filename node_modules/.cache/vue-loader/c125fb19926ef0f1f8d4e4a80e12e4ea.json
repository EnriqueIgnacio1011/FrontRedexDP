{"remainingRequest":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\src\\pages\\Maps.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\src\\pages\\Maps.vue","mtime":1596683947000},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713478866974},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\babel-loader\\lib\\index.js","mtime":1713478866263},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713478866974},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-loader\\lib\\index.js","mtime":1713478868660}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Mapbox from \"mapbox-gl\";\nimport {MglMap, MglNavigationControl, MglGeojsonLayer} from \"vue-mapbox\";\nimport Mapa from '@/store/map.json';\nimport Mapa2 from '@/store/map2.json';\nimport axios from 'axios';\nimport Authentication from '@/store/authentication.js';\nimport Simulation from '@/store/simulation.js';\n\nexport default {\n  components: {\n    MglMap,\n    MglNavigationControl,\n    MglGeojsonLayer\n  },\n  data() {\n    return {\n      toggleIniciarDetener: true,\n      toggleReanudar: false,\n      accessToken: this.$store.state.map.token, // your access token. Needed if you using Mapbox maps\n      mapStyle: 'mapbox://styles/mapbox/dark-v10',\n      center: [5,15],\n      zoom: 2,\n      sedes:{\n        type:'geojson',\n        //data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        data: {\n          \"id\" : \"sedes\",\n          \"type\": \"FeatureCollection\",\n          \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\n          \"features\": Mapa.features\n        },\n        cluster:false,\n        clusterMaxZoom: 14,\n        clusterRadius: 50\n      },\n      sedesCount:{\n        type:'geojson',\n        //data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        data: {\n          \"id\" : \"sedesCount\",\n          \"type\": \"FeatureCollection\",\n          \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\n          \"features\": Mapa.features\n        },\n        \n        cluster:false,\n        clusterMaxZoom: 14,\n        clusterRadius: 50\n      },\n      rutas:{\n        type:'geojson',\n        //data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        data: {\n          \"id\" : \"rutas\",\n          \"type\": \"FeatureCollection\",\n          \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\n          \"features\": Mapa2.features\n        },\n        cluster:false,\n        clusterMaxZoom: 14,\n        clusterRadius: 50\n      },\n      rutasCount:{\n        type:'geojson',\n        //data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        data: {\n          \"id\" : \"rutasCount\",\n          \"type\": \"FeatureCollection\",\n          \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\n          \"features\": Mapa2.features\n        },\n        cluster:false,\n        clusterMaxZoom: 14,\n        clusterRadius: 50\n      },\n      sedesLayer:{\n        id: 'sedesLayer',\n        type: 'circle',\n        source: 'sedes',\n        filter: ['has', 'capacidad'],\n        paint: {\n            'circle-color':'#3b9e6e',\n            'circle-radius':26\n\n        }\n      },\n      sedesLayerCount:{\n        id:'sedesLayerCount',\n        type: 'symbol',\n        source: 'sedesCount',\n        filter: ['has', 'capacidad'],\n        layout: {\n            'text-field': '{capacidad}',\n            'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n            'text-size': 12\n        }\n      },\n      rutasLayer:{\n        id: 'rutasLayer',\n        type: 'circle',\n        source: 'rutas',\n        filter: ['has', 'capacidad'],\n        paint: {\n            'circle-color':'#8965e0',\n            'circle-radius':15\n\n        }\n      },\n      rutasLayerCount:{\n        id:'rutasLayerCount',\n        type: 'symbol',\n        source: 'rutasCount',\n        filter: ['has', 'capacidad'],\n        layout: {\n            'text-field': '{capacidad}',\n            'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n            'text-size': 12\n        }\n      },\n\n      myInterval: null,\n      myIntervalReplan:null,\n\n      fecha_inicio_simulacion: null,\n      fecha_fin_simulacion: null,\n\n      type: [\"\", \"info\", \"success\", \"warning\", \"danger\"],\n      notifications: {\n        topCenter: false\n      }\n      \n    }\n  },\n  mounted(){\n    \n    let vue = this;\n\n  },\n  destroyed:{\n  },\n  methods: {\n    onMapLoaded(event) {\n      // in component\n      this.map = event.map;\n      // or just to store if you want have access from other components\n      this.$store.map = event.map;\n    },\n    iniciarSimulacion(){\n      let vue = this;\n      vue.toggleIniciarDetener = false;\n      vue.toggleReanudar = false;\n\n/*\n      vue.myInterval = setInterval(()  =>{\n        axios.get(vue.$store.state.appUri + '/sedes/listarSedes')\n        .then(function(response){\n          console.log(response.data)\n          response.data.forEach(element => {  \n            Mapa.features.push(\n              { \"type\": \"Feature\",\n                \"properties\": { \"id\": element.codigoOaci,  \"capacidad\": element.codigoOaci + \":  \" + element.numero_paquetes.toString() },\n                \"geometry\": { \"type\": \"Point\", \"coordinates\": [element.coordenadas[1],element.coordenadas[0],0.0]}\n              }\n            );       \n          });\n        })\n        .catch(function(error){\n          console.log(error);\n        });\n      }, 10000);\n*/\n\n      /*MOSTRAR RUTAS*/\n      \n      axios.post(vue.$store.state.appUri + '/simulacion/simular/'+ vue.fecha_inicio_simulacion.substring(8,10)+\n                                                              '/'+vue.fecha_inicio_simulacion.substring(5,7)+\n                                                              '/'+vue.fecha_inicio_simulacion.substring(0,4)+\n                                                              '/'+vue.fecha_fin_simulacion.substring(8,10)+\n                                                              '/'+vue.fecha_fin_simulacion.substring(5,7)+\n                                                              '/'+vue.fecha_fin_simulacion.substring(0,4)+\n                                                              '/'+Authentication.getProfile().id)\n      .then(function(response){\n        Simulation.runSimulation(response.data.simulacion.id);\n        console.log(Simulation.getIdSimulation());\n\n        /*\n        axios.post(vue.$store.state.appUri + '/algoritmos/replanificacion2/'  +vue.fecha_inicio_simulacion.substring(8,10)+\n                                                                          '/'+vue.fecha_inicio_simulacion.substring(5,7)+\n                                                                          '/'+vue.fecha_inicio_simulacion.substring(0,4)+\n                                                                          '/'+vue.fecha_fin_simulacion.substring(8,10)+\n                                                                          '/'+vue.fecha_fin_simulacion.substring(5,7)+\n                                                                          '/'+vue.fecha_fin_simulacion.substring(0,4)+\n                                                                          '/'+Simulation.getIdSimulation());  \n        */\n\n        var date = new Date();\n        var day = date.getDate();\n        var month = date.getMonth() + 1;\n        var year = date.getFullYear();\n        var hour = date.getUTCHours();\n        var min = date.getUTCMinutes();\n\n        if(hour + 4 >= 24){\n          hour= hour + 4 - 24;\n        }\n\n        axios.post(vue.$store.state.appUri + '/algoritmos/replanificacion/'  +vue.fecha_inicio_simulacion.substring(8,10)+\n                                                                          '/'+vue.fecha_inicio_simulacion.substring(5,7)+\n                                                                          '/'+vue.fecha_inicio_simulacion.substring(0,4)+\n                                                                          '/'+hour.toString()+'/'+min.toString()+'/'+Simulation.getIdSimulation());\n\n\n\n        /*TIMER REPLANIFICACION*/\n        vue.myIntervalReplan = setInterval(()  =>{\n\n          var date = new Date();\n          var day = date.getDate();\n          var month = date.getMonth() + 1;\n          var year = date.getFullYear();\n          var hour = date.getUTCHours();\n          var min = date.getUTCMinutes();\n          var diaSim;\n\n          if(hour + 4 >= 24){\n            hour= hour + 4 - 24;\n            diaSim = Number(vuefecha_inicio_simulacion) + 1;\n          }else{\n            hour= hour + 4;\n          }\n\n          axios.post(vue.$store.state.appUri + '/algoritmos/replanificacion/'  +diaSim.toString()+//  vue.fecha_inicio_simulacion.substring(8,10)+\n                                                                            '/'+vue.fecha_inicio_simulacion.substring(5,7)+\n                                                                            '/'+vue.fecha_inicio_simulacion.substring(0,4)+\n                                                                            '/'+hour.toString()+'/'+min.toString()+'/'+Simulation.getIdSimulation())\n          .then(function(response){\n            axios.post(vue.$store.state.appUri + '/paquetes/actualizarEstadoPaquetes/' +day.toString()+\n                                                                                    '/'+month.toString()+\n                                                                                    '/'+year.toString()+\n                                                                                    '/'+hour.toString()+\n                                                                                    '/'+min.toString())\n          });\n        }, 600000);\n\n\n        /*TIMER MAPA*/\n        vue.myInterval = setInterval(()  =>{          \n\n\n          axios.get(vue.$store.state.appUri + '/simulacion/mapa/'+Simulation.getIdSimulation())\n          .then(function(response2){\n\n            if(response2.data.c != null){              \n              console.log(\"SE DETIENE LA SIMULACION\");\n              console.log(response2.data);\n              Simulation.stopSimulation();\n              clearInterval(vue.myInterval);\n              this.notifyVue('top', 'center',4,NotificationTemplatePaqueteError);\n            }else{\n              console.log(response2.data);\n              //Mapa.features = [];\n              //Mapa2.features = [];\n              \n              response2.data.sedes.forEach(element => {               \n                \n              Mapa.features.push(\n                  { \"type\": \"Feature\",\n                    \"properties\": { \"id\": element.codigoOaci,  \"capacidad\": element.codigoOaci + \":  \" + Math.abs(element.numero_paquetes).toString() },\n                    \"geometry\": { \"type\": \"Point\", \"coordinates\": [element.latitud,element.longitud,0.0]}\n                  }\n                );       \n              });\n\n\n              response2.data.rutasDto.forEach(element => {  \n              Mapa2.features.push(\n                  { \"type\": \"Feature\",\n                    \"properties\": { \"id\": element.id,  \"capacidad\": element.numero_paquetes_ruta.toString() },\n                    \"geometry\": { \"type\": \"Point\", \"coordinates\": [element.coordenadas[1],element.coordenadas[0],0.0]}\n                  }\n                );       \n              });\n            }\n\n\n          });\n        }, 300000);\n\n      });\n\n\n    },\n    detenerSimulacion(){\n      let vue = this;\n      vue.toggleIniciarDetener = false;\n      vue.toggleReanudar = true;\n      \n    },\n    reanudarSimulacion(){\n      let vue = this;\n      vue.toggleIniciarDetener = false;\n      vue.toggleReanudar = false;\n    },\n    cancelarSimulacion(){\n      let vue = this;\n      vue.toggleIniciarDetener = true;\n      console.log(\"SE DETIENE LA SIMULACION\");\n      clearInterval(vue.myInterval);\n      Simulation.stopSimulation();\n      console.log(vue.fecha_fin_simulacion);\n    },\n    async simu(){\n      let vue = this;\n      let response = axios.post(vue.$store.state.appUri + '/algoritmos/replanificacion2/'  +vue.fecha_inicio_simulacion.substring(8,10)+\n                                                                                        '/'+vue.fecha_inicio_simulacion.substring(5,7)+\n                                                                                        '/'+vue.fecha_inicio_simulacion.substring(0,4)+\n                                                                                        '/'+vue.fecha_fin_simulacion.substring(8,10)+\n                                                                                        '/'+vue.fecha_fin_simulacion.substring(5,7)+\n                                                                                        '/'+vue.fecha_fin_simulacion.substring(0,4)+\n                                                                                        '/'+Simulation.getIdSimulation());\n        console.log(response.data);  \n    },\n    notifyVue(verticalAlign, horizontalAlign,color,componente) {\n      //const color = 4;\n      //console.log(color);\n      this.$notify({\n        component: componente,\n        icon: \"tim-icons icon-bell-55\",\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: this.type[color],\n        timeout: 0\n      });\n    }\n\n\n    /*\n    calcularTriangulacion(x1,x2,y1,y2,porcentaje){\n\n      var distanciaX = Math.abs(x1-x2)*porcentaje;\n      var distanciaY = Math.abs(y1-y2)*porcentaje;\n\n      var nuevaCoordenada = [];\n\n      if(x1>x2){\n        nuevaCoordenada.push(x1-distanciaX);\n      }else{\n        nuevaCoordenada.push(x1+distanciaX);\n      }\n\n      if(y1>y2){\n        nuevaCoordenada.push(y1-distanciaY);\n      }else{\n        nuevaCoordenada.push(y1+distanciaY);\n      }\n\n      return nuevaCoordenada.push(0.00);\n    }\n    */\n  }\n}\n",{"version":3,"sources":["Maps.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Maps.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div>\n    <MglMap :accessToken=\"accessToken\" \n            :mapStyle=\"mapStyle\" :center=\"center\" \n            :zoom=\"zoom\" style=\"height:750px!important;\" \n            :renderWorldCopies = false\n            @onload=\"onMapLoaded\">\n\n      <MglNavigationControl\n        position=\"top-center\">\n      </MglNavigationControl> \n\n      <MglGeojsonLayer\n        :sourceId=\"sedes.data.id\"\n        :source=\"sedes\"\n        :layerId=\"sedesLayer.id\"\n        :layer=\"sedesLayer\">\n      </MglGeojsonLayer>\n\n      <MglGeojsonLayer\n        :sourceId=\"sedesCount.data.id\"\n        :source=\"sedesCount\"\n        :layerId=\"sedesLayerCount.id\"\n        :layer=\"sedesLayerCount\">\n      </MglGeojsonLayer>\n\n      <MglGeojsonLayer\n        :sourceId=\"rutas.data.id\"\n        :source=\"rutas\"\n        :layerId=\"rutasLayer.id\"\n        :layer=\"rutasLayer\">\n      </MglGeojsonLayer>\n\n      <MglGeojsonLayer\n        :sourceId=\"rutasCount.data.id\"\n        :source=\"rutasCount\"\n        :layerId=\"rutasLayerCount.id\"\n        :layer=\"rutasLayerCount\">\n      </MglGeojsonLayer>\n      \n    </MglMap>\n    <!-- <div id=\"map\" style=\"height:750px!important;\"></div> -->\n\n    \n    <div class=\"row\" style=\"margin-top:40px!important\"> \n      <div class=\"col-md-3 pr-md-1\">\n        <base-input label=\"Fecha Inicio\"\n                  type=\"date\"\n                  format= \"yyyy-MM-dd\"\n                  placeholder=\"Fecha Inicio\"\n                  v-model=\"fecha_inicio_simulacion\">\n        </base-input>\n      </div>\n      <div class=\"col-md-3 pr-md-1\">\n        <base-input label=\"Fecha Fin\"\n                  type=\"date\"\n                  format= \"yyyy-MM-dd\"\n                  placeholder=\"Fecha Fin\"\n                  v-model=\"fecha_fin_simulacion\">\n        </base-input>\n      </div>\n    </div>\n\n\n    <div class=\"row\">\n      <div class=\"col-md-3\" style=\"margin-top:40px!important\" v-show=\"toggleIniciarDetener\"> \n        <b-button  v-b-modal.modal-iniciar slot=\"footer\" type=\"primary\" fill>Iniciar</b-button>\n        <b-modal id=\"modal-iniciar\"\n            @ok=\"iniciarSimulacion\">\n            ¿Deseas iniciar la simulación?\n        </b-modal>\n      </div>\n      <div class=\"col-md-3\" style=\"margin-top:40px!important\" v-show=\"!toggleIniciarDetener\"> \n        <b-button  v-b-modal.modal-cancelar slot=\"footer\" type=\"primary\" fill>Cancelar</b-button>\n        <b-modal id=\"modal-cancelar\"\n            @ok=\"cancelarSimulacion\">\n            ¿Deseas cancelar la simulación?\n        </b-modal>\n      </div>\n      <div class=\"col-md-3\" style=\"margin-top:40px!important\" v-show=\"!toggleIniciarDetener && !toggleReanudar\"> \n        <b-button  v-b-modal.modal-detener slot=\"footer\" type=\"primary\" fill>Detener</b-button>\n        <b-modal id=\"modal-detener\"\n            @ok=\"detenerSimulacion\">\n            ¿Deseas detener la simulacion?\n        </b-modal>\n      </div>\n      <div class=\"col-md-3\" style=\"margin-top:40px!important\" v-show=\"!toggleIniciarDetener && toggleReanudar\"> \n        <b-button  v-b-modal.modal-reanudar slot=\"footer\" type=\"primary\" fill>Reanudar</b-button>\n        <b-modal id=\"modal-reanudar\"\n            @ok=\"reanudarSimulacion\">\n            ¿Deseas reanudar la simulación?\n        </b-modal>\n      </div>\n    </div>\n    \n  </div>\n</template>\n\n<script>\nimport Mapbox from \"mapbox-gl\";\nimport {MglMap, MglNavigationControl, MglGeojsonLayer} from \"vue-mapbox\";\nimport Mapa from '@/store/map.json';\nimport Mapa2 from '@/store/map2.json';\nimport axios from 'axios';\nimport Authentication from '@/store/authentication.js';\nimport Simulation from '@/store/simulation.js';\n\nexport default {\n  components: {\n    MglMap,\n    MglNavigationControl,\n    MglGeojsonLayer\n  },\n  data() {\n    return {\n      toggleIniciarDetener: true,\n      toggleReanudar: false,\n      accessToken: this.$store.state.map.token, // your access token. Needed if you using Mapbox maps\n      mapStyle: 'mapbox://styles/mapbox/dark-v10',\n      center: [5,15],\n      zoom: 2,\n      sedes:{\n        type:'geojson',\n        //data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        data: {\n          \"id\" : \"sedes\",\n          \"type\": \"FeatureCollection\",\n          \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\n          \"features\": Mapa.features\n        },\n        cluster:false,\n        clusterMaxZoom: 14,\n        clusterRadius: 50\n      },\n      sedesCount:{\n        type:'geojson',\n        //data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        data: {\n          \"id\" : \"sedesCount\",\n          \"type\": \"FeatureCollection\",\n          \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\n          \"features\": Mapa.features\n        },\n        \n        cluster:false,\n        clusterMaxZoom: 14,\n        clusterRadius: 50\n      },\n      rutas:{\n        type:'geojson',\n        //data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        data: {\n          \"id\" : \"rutas\",\n          \"type\": \"FeatureCollection\",\n          \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\n          \"features\": Mapa2.features\n        },\n        cluster:false,\n        clusterMaxZoom: 14,\n        clusterRadius: 50\n      },\n      rutasCount:{\n        type:'geojson',\n        //data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        data: {\n          \"id\" : \"rutasCount\",\n          \"type\": \"FeatureCollection\",\n          \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\n          \"features\": Mapa2.features\n        },\n        cluster:false,\n        clusterMaxZoom: 14,\n        clusterRadius: 50\n      },\n      sedesLayer:{\n        id: 'sedesLayer',\n        type: 'circle',\n        source: 'sedes',\n        filter: ['has', 'capacidad'],\n        paint: {\n            'circle-color':'#3b9e6e',\n            'circle-radius':26\n\n        }\n      },\n      sedesLayerCount:{\n        id:'sedesLayerCount',\n        type: 'symbol',\n        source: 'sedesCount',\n        filter: ['has', 'capacidad'],\n        layout: {\n            'text-field': '{capacidad}',\n            'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n            'text-size': 12\n        }\n      },\n      rutasLayer:{\n        id: 'rutasLayer',\n        type: 'circle',\n        source: 'rutas',\n        filter: ['has', 'capacidad'],\n        paint: {\n            'circle-color':'#8965e0',\n            'circle-radius':15\n\n        }\n      },\n      rutasLayerCount:{\n        id:'rutasLayerCount',\n        type: 'symbol',\n        source: 'rutasCount',\n        filter: ['has', 'capacidad'],\n        layout: {\n            'text-field': '{capacidad}',\n            'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n            'text-size': 12\n        }\n      },\n\n      myInterval: null,\n      myIntervalReplan:null,\n\n      fecha_inicio_simulacion: null,\n      fecha_fin_simulacion: null,\n\n      type: [\"\", \"info\", \"success\", \"warning\", \"danger\"],\n      notifications: {\n        topCenter: false\n      }\n      \n    }\n  },\n  mounted(){\n    \n    let vue = this;\n\n  },\n  destroyed:{\n  },\n  methods: {\n    onMapLoaded(event) {\n      // in component\n      this.map = event.map;\n      // or just to store if you want have access from other components\n      this.$store.map = event.map;\n    },\n    iniciarSimulacion(){\n      let vue = this;\n      vue.toggleIniciarDetener = false;\n      vue.toggleReanudar = false;\n\n/*\n      vue.myInterval = setInterval(()  =>{\n        axios.get(vue.$store.state.appUri + '/sedes/listarSedes')\n        .then(function(response){\n          console.log(response.data)\n          response.data.forEach(element => {  \n            Mapa.features.push(\n              { \"type\": \"Feature\",\n                \"properties\": { \"id\": element.codigoOaci,  \"capacidad\": element.codigoOaci + \":  \" + element.numero_paquetes.toString() },\n                \"geometry\": { \"type\": \"Point\", \"coordinates\": [element.coordenadas[1],element.coordenadas[0],0.0]}\n              }\n            );       \n          });\n        })\n        .catch(function(error){\n          console.log(error);\n        });\n      }, 10000);\n*/\n\n      /*MOSTRAR RUTAS*/\n      \n      axios.post(vue.$store.state.appUri + '/simulacion/simular/'+ vue.fecha_inicio_simulacion.substring(8,10)+\n                                                              '/'+vue.fecha_inicio_simulacion.substring(5,7)+\n                                                              '/'+vue.fecha_inicio_simulacion.substring(0,4)+\n                                                              '/'+vue.fecha_fin_simulacion.substring(8,10)+\n                                                              '/'+vue.fecha_fin_simulacion.substring(5,7)+\n                                                              '/'+vue.fecha_fin_simulacion.substring(0,4)+\n                                                              '/'+Authentication.getProfile().id)\n      .then(function(response){\n        Simulation.runSimulation(response.data.simulacion.id);\n        console.log(Simulation.getIdSimulation());\n\n        /*\n        axios.post(vue.$store.state.appUri + '/algoritmos/replanificacion2/'  +vue.fecha_inicio_simulacion.substring(8,10)+\n                                                                          '/'+vue.fecha_inicio_simulacion.substring(5,7)+\n                                                                          '/'+vue.fecha_inicio_simulacion.substring(0,4)+\n                                                                          '/'+vue.fecha_fin_simulacion.substring(8,10)+\n                                                                          '/'+vue.fecha_fin_simulacion.substring(5,7)+\n                                                                          '/'+vue.fecha_fin_simulacion.substring(0,4)+\n                                                                          '/'+Simulation.getIdSimulation());  \n        */\n\n        var date = new Date();\n        var day = date.getDate();\n        var month = date.getMonth() + 1;\n        var year = date.getFullYear();\n        var hour = date.getUTCHours();\n        var min = date.getUTCMinutes();\n\n        if(hour + 4 >= 24){\n          hour= hour + 4 - 24;\n        }\n\n        axios.post(vue.$store.state.appUri + '/algoritmos/replanificacion/'  +vue.fecha_inicio_simulacion.substring(8,10)+\n                                                                          '/'+vue.fecha_inicio_simulacion.substring(5,7)+\n                                                                          '/'+vue.fecha_inicio_simulacion.substring(0,4)+\n                                                                          '/'+hour.toString()+'/'+min.toString()+'/'+Simulation.getIdSimulation());\n\n\n\n        /*TIMER REPLANIFICACION*/\n        vue.myIntervalReplan = setInterval(()  =>{\n\n          var date = new Date();\n          var day = date.getDate();\n          var month = date.getMonth() + 1;\n          var year = date.getFullYear();\n          var hour = date.getUTCHours();\n          var min = date.getUTCMinutes();\n          var diaSim;\n\n          if(hour + 4 >= 24){\n            hour= hour + 4 - 24;\n            diaSim = Number(vuefecha_inicio_simulacion) + 1;\n          }else{\n            hour= hour + 4;\n          }\n\n          axios.post(vue.$store.state.appUri + '/algoritmos/replanificacion/'  +diaSim.toString()+//  vue.fecha_inicio_simulacion.substring(8,10)+\n                                                                            '/'+vue.fecha_inicio_simulacion.substring(5,7)+\n                                                                            '/'+vue.fecha_inicio_simulacion.substring(0,4)+\n                                                                            '/'+hour.toString()+'/'+min.toString()+'/'+Simulation.getIdSimulation())\n          .then(function(response){\n            axios.post(vue.$store.state.appUri + '/paquetes/actualizarEstadoPaquetes/' +day.toString()+\n                                                                                    '/'+month.toString()+\n                                                                                    '/'+year.toString()+\n                                                                                    '/'+hour.toString()+\n                                                                                    '/'+min.toString())\n          });\n        }, 600000);\n\n\n        /*TIMER MAPA*/\n        vue.myInterval = setInterval(()  =>{          \n\n\n          axios.get(vue.$store.state.appUri + '/simulacion/mapa/'+Simulation.getIdSimulation())\n          .then(function(response2){\n\n            if(response2.data.c != null){              \n              console.log(\"SE DETIENE LA SIMULACION\");\n              console.log(response2.data);\n              Simulation.stopSimulation();\n              clearInterval(vue.myInterval);\n              this.notifyVue('top', 'center',4,NotificationTemplatePaqueteError);\n            }else{\n              console.log(response2.data);\n              //Mapa.features = [];\n              //Mapa2.features = [];\n              \n              response2.data.sedes.forEach(element => {               \n                \n              Mapa.features.push(\n                  { \"type\": \"Feature\",\n                    \"properties\": { \"id\": element.codigoOaci,  \"capacidad\": element.codigoOaci + \":  \" + Math.abs(element.numero_paquetes).toString() },\n                    \"geometry\": { \"type\": \"Point\", \"coordinates\": [element.latitud,element.longitud,0.0]}\n                  }\n                );       \n              });\n\n\n              response2.data.rutasDto.forEach(element => {  \n              Mapa2.features.push(\n                  { \"type\": \"Feature\",\n                    \"properties\": { \"id\": element.id,  \"capacidad\": element.numero_paquetes_ruta.toString() },\n                    \"geometry\": { \"type\": \"Point\", \"coordinates\": [element.coordenadas[1],element.coordenadas[0],0.0]}\n                  }\n                );       \n              });\n            }\n\n\n          });\n        }, 300000);\n\n      });\n\n\n    },\n    detenerSimulacion(){\n      let vue = this;\n      vue.toggleIniciarDetener = false;\n      vue.toggleReanudar = true;\n      \n    },\n    reanudarSimulacion(){\n      let vue = this;\n      vue.toggleIniciarDetener = false;\n      vue.toggleReanudar = false;\n    },\n    cancelarSimulacion(){\n      let vue = this;\n      vue.toggleIniciarDetener = true;\n      console.log(\"SE DETIENE LA SIMULACION\");\n      clearInterval(vue.myInterval);\n      Simulation.stopSimulation();\n      console.log(vue.fecha_fin_simulacion);\n    },\n    async simu(){\n      let vue = this;\n      let response = axios.post(vue.$store.state.appUri + '/algoritmos/replanificacion2/'  +vue.fecha_inicio_simulacion.substring(8,10)+\n                                                                                        '/'+vue.fecha_inicio_simulacion.substring(5,7)+\n                                                                                        '/'+vue.fecha_inicio_simulacion.substring(0,4)+\n                                                                                        '/'+vue.fecha_fin_simulacion.substring(8,10)+\n                                                                                        '/'+vue.fecha_fin_simulacion.substring(5,7)+\n                                                                                        '/'+vue.fecha_fin_simulacion.substring(0,4)+\n                                                                                        '/'+Simulation.getIdSimulation());\n        console.log(response.data);  \n    },\n    notifyVue(verticalAlign, horizontalAlign,color,componente) {\n      //const color = 4;\n      //console.log(color);\n      this.$notify({\n        component: componente,\n        icon: \"tim-icons icon-bell-55\",\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: this.type[color],\n        timeout: 0\n      });\n    }\n\n\n    /*\n    calcularTriangulacion(x1,x2,y1,y2,porcentaje){\n\n      var distanciaX = Math.abs(x1-x2)*porcentaje;\n      var distanciaY = Math.abs(y1-y2)*porcentaje;\n\n      var nuevaCoordenada = [];\n\n      if(x1>x2){\n        nuevaCoordenada.push(x1-distanciaX);\n      }else{\n        nuevaCoordenada.push(x1+distanciaX);\n      }\n\n      if(y1>y2){\n        nuevaCoordenada.push(y1-distanciaY);\n      }else{\n        nuevaCoordenada.push(y1+distanciaY);\n      }\n\n      return nuevaCoordenada.push(0.00);\n    }\n    */\n  }\n}\n</script>\n<style>\n</style>\n"]}]}