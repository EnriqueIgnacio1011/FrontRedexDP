{"remainingRequest":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\src\\pages\\Maps.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\src\\pages\\Maps.vue","mtime":1715192479101},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715192468895},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\babel-loader\\lib\\index.js","mtime":1715192467870},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715192468895},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-loader\\lib\\index.js","mtime":1715192477908}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Mapbox from \"mapbox-gl\";\nimport { MglMap, MglNavigationControl, MglGeojsonLayer } from \"vue-mapbox\";\nimport Mapa from '@/store/map.json';\nimport Mapa2 from '@/store/map2.json';\nimport axios from 'axios';\nimport Authentication from '@/store/authentication.js';\nimport Simulation from '@/store/simulation.js';\nexport default {\n  components: {\n    MglMap,\n    MglNavigationControl,\n    MglGeojsonLayer\n  },\n\n  data() {\n    return {\n      isLegendOpen: false,\n      currentDateTime: new Date().toLocaleString('es-ES', {\n        timeZone: 'America/Lima',\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        timeZoneName: 'short'\n      }),\n      toggleIniciarDetener: true,\n      toggleReanudar: false,\n      accessToken: this.$store.state.map.token,\n      // your access token. Needed if you using Mapbox maps\n      mapStyle: 'mapbox://styles/mapbox/dark-v10',\n      center: [5, 15],\n      zoom: 2,\n      sedes: {\n        type: 'geojson',\n        //data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        data: {\n          \"id\": \"sedes\",\n          \"type\": \"FeatureCollection\",\n          \"crs\": {\n            \"type\": \"name\",\n            \"properties\": {\n              \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\"\n            }\n          },\n          \"features\": Mapa.features\n        },\n        cluster: false,\n        clusterMaxZoom: 14,\n        clusterRadius: 50\n      },\n      sedesCount: {\n        type: 'geojson',\n        //data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        data: {\n          \"id\": \"sedesCount\",\n          \"type\": \"FeatureCollection\",\n          \"crs\": {\n            \"type\": \"name\",\n            \"properties\": {\n              \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\"\n            }\n          },\n          \"features\": Mapa.features\n        },\n        cluster: false,\n        clusterMaxZoom: 14,\n        clusterRadius: 50\n      },\n      rutas: {\n        type: 'geojson',\n        //data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        data: {\n          \"id\": \"rutas\",\n          \"type\": \"FeatureCollection\",\n          \"crs\": {\n            \"type\": \"name\",\n            \"properties\": {\n              \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\"\n            }\n          },\n          \"features\": Mapa2.features\n        },\n        cluster: false,\n        clusterMaxZoom: 14,\n        clusterRadius: 50\n      },\n      rutasCount: {\n        type: 'geojson',\n        //data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\n        data: {\n          \"id\": \"rutasCount\",\n          \"type\": \"FeatureCollection\",\n          \"crs\": {\n            \"type\": \"name\",\n            \"properties\": {\n              \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\"\n            }\n          },\n          \"features\": Mapa2.features\n        },\n        cluster: false,\n        clusterMaxZoom: 14,\n        clusterRadius: 50\n      },\n      sedesLayer: {\n        id: 'sedesLayer',\n        type: 'circle',\n        source: 'sedes',\n        filter: ['has', 'capacidad'],\n        paint: {\n          'circle-color': '#3b9e6e',\n          'circle-radius': 26\n        }\n      },\n      sedesLayerCount: {\n        id: 'sedesLayerCount',\n        type: 'symbol',\n        source: 'sedesCount',\n        filter: ['has', 'capacidad'],\n        layout: {\n          'text-field': '{capacidad}',\n          'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n          'text-size': 12\n        }\n      },\n      rutasLayer: {\n        id: 'rutasLayer',\n        type: 'circle',\n        source: 'rutas',\n        filter: ['has', 'capacidad'],\n        paint: {\n          'circle-color': '#8965e0',\n          'circle-radius': 15\n        }\n      },\n      rutasLayerCount: {\n        id: 'rutasLayerCount',\n        type: 'symbol',\n        source: 'rutasCount',\n        filter: ['has', 'capacidad'],\n        layout: {\n          'text-field': '{capacidad}',\n          'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n          'text-size': 12\n        }\n      },\n      myInterval: null,\n      myIntervalReplan: null,\n      fecha_inicio_simulacion: null,\n      fecha_fin_simulacion: null,\n      type: [\"\", \"info\", \"success\", \"warning\", \"danger\"],\n      notifications: {\n        topCenter: false\n      }\n    };\n  },\n\n  mounted() {\n    let vue = this;\n    this.updateTime();\n  },\n\n  destroyed: {},\n  methods: {\n    toggleLegend() {\n      this.isLegendOpen = !this.isLegendOpen;\n    },\n\n    updateTime() {\n      setInterval(() => {\n        this.currentDateTime = new Date().toLocaleString('es-ES', {\n          timeZone: 'America/Lima',\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          timeZoneName: 'short'\n        });\n      }, 1000);\n    },\n\n    onMapLoaded(event) {\n      // in component\n      this.map = event.map; // or just to store if you want have access from other components\n\n      this.$store.map = event.map;\n    },\n\n    iniciarSimulacion() {\n      let vue = this;\n      vue.toggleIniciarDetener = false;\n      vue.toggleReanudar = false;\n      /*\r\n            vue.myInterval = setInterval(()  =>{\r\n              axios.get(vue.$store.state.appUri + '/sedes/listarSedes')\r\n              .then(function(response){\r\n                console.log(response.data)\r\n                response.data.forEach(element => {  \r\n                  Mapa.features.push(\r\n                    { \"type\": \"Feature\",\r\n                      \"properties\": { \"id\": element.codigoOaci,  \"capacidad\": element.codigoOaci + \":  \" + element.numero_paquetes.toString() },\r\n                      \"geometry\": { \"type\": \"Point\", \"coordinates\": [element.coordenadas[1],element.coordenadas[0],0.0]}\r\n                    }\r\n                  );       \r\n                });\r\n              })\r\n              .catch(function(error){\r\n                console.log(error);\r\n              });\r\n            }, 10000);\r\n      */\n\n      /*MOSTRAR RUTAS*/\n\n      axios.post(vue.$store.state.appUri + '/simulacion/simular/' + vue.fecha_inicio_simulacion.substring(8, 10) + '/' + vue.fecha_inicio_simulacion.substring(5, 7) + '/' + vue.fecha_inicio_simulacion.substring(0, 4) + '/' + vue.fecha_fin_simulacion.substring(8, 10) + '/' + vue.fecha_fin_simulacion.substring(5, 7) + '/' + vue.fecha_fin_simulacion.substring(0, 4) + '/' + Authentication.getProfile().id).then(function (response) {\n        Simulation.runSimulation(response.data.simulacion.id);\n        console.log(Simulation.getIdSimulation());\n        /*\r\n        axios.post(vue.$store.state.appUri + '/algoritmos/replanificacion2/'  +vue.fecha_inicio_simulacion.substring(8,10)+\r\n                                                                          '/'+vue.fecha_inicio_simulacion.substring(5,7)+\r\n                                                                          '/'+vue.fecha_inicio_simulacion.substring(0,4)+\r\n                                                                          '/'+vue.fecha_fin_simulacion.substring(8,10)+\r\n                                                                          '/'+vue.fecha_fin_simulacion.substring(5,7)+\r\n                                                                          '/'+vue.fecha_fin_simulacion.substring(0,4)+\r\n                                                                          '/'+Simulation.getIdSimulation());  \r\n        */\n\n        var date = new Date();\n        var day = date.getDate();\n        var month = date.getMonth() + 1;\n        var year = date.getFullYear();\n        var hour = date.getUTCHours();\n        var min = date.getUTCMinutes();\n\n        if (hour + 4 >= 24) {\n          hour = hour + 4 - 24;\n        }\n\n        axios.post(vue.$store.state.appUri + '/algoritmos/replanificacion/' + vue.fecha_inicio_simulacion.substring(8, 10) + '/' + vue.fecha_inicio_simulacion.substring(5, 7) + '/' + vue.fecha_inicio_simulacion.substring(0, 4) + '/' + hour.toString() + '/' + min.toString() + '/' + Simulation.getIdSimulation());\n        /*TIMER REPLANIFICACION*/\n\n        vue.myIntervalReplan = setInterval(() => {\n          var date = new Date();\n          var day = date.getDate();\n          var month = date.getMonth() + 1;\n          var year = date.getFullYear();\n          var hour = date.getUTCHours();\n          var min = date.getUTCMinutes();\n          var diaSim;\n\n          if (hour + 4 >= 24) {\n            hour = hour + 4 - 24;\n            diaSim = Number(vuefecha_inicio_simulacion) + 1;\n          } else {\n            hour = hour + 4;\n          }\n\n          axios.post(vue.$store.state.appUri + '/algoritmos/replanificacion/' + diaSim.toString() + //  vue.fecha_inicio_simulacion.substring(8,10)+\n          '/' + vue.fecha_inicio_simulacion.substring(5, 7) + '/' + vue.fecha_inicio_simulacion.substring(0, 4) + '/' + hour.toString() + '/' + min.toString() + '/' + Simulation.getIdSimulation()).then(function (response) {\n            axios.post(vue.$store.state.appUri + '/paquetes/actualizarEstadoPaquetes/' + day.toString() + '/' + month.toString() + '/' + year.toString() + '/' + hour.toString() + '/' + min.toString());\n          });\n        }, 600000);\n        /*TIMER MAPA*/\n\n        vue.myInterval = setInterval(() => {\n          axios.get(vue.$store.state.appUri + '/simulacion/mapa/' + Simulation.getIdSimulation()).then(function (response2) {\n            if (response2.data.c != null) {\n              console.log(\"SE DETIENE LA SIMULACION\");\n              console.log(response2.data);\n              Simulation.stopSimulation();\n              clearInterval(vue.myInterval);\n              this.notifyVue('top', 'center', 4, NotificationTemplatePaqueteError);\n            } else {\n              console.log(response2.data); //Mapa.features = [];\n              //Mapa2.features = [];\n\n              response2.data.sedes.forEach(element => {\n                Mapa.features.push({\n                  \"type\": \"Feature\",\n                  \"properties\": {\n                    \"id\": element.codigoOaci,\n                    \"capacidad\": element.codigoOaci + \":  \" + Math.abs(element.numero_paquetes).toString()\n                  },\n                  \"geometry\": {\n                    \"type\": \"Point\",\n                    \"coordinates\": [element.latitud, element.longitud, 0.0]\n                  }\n                });\n              });\n              response2.data.rutasDto.forEach(element => {\n                Mapa2.features.push({\n                  \"type\": \"Feature\",\n                  \"properties\": {\n                    \"id\": element.id,\n                    \"capacidad\": element.numero_paquetes_ruta.toString()\n                  },\n                  \"geometry\": {\n                    \"type\": \"Point\",\n                    \"coordinates\": [element.coordenadas[1], element.coordenadas[0], 0.0]\n                  }\n                });\n              });\n            }\n          });\n        }, 300000);\n      });\n    },\n\n    detenerSimulacion() {\n      let vue = this;\n      vue.toggleIniciarDetener = false;\n      vue.toggleReanudar = true;\n    },\n\n    reanudarSimulacion() {\n      let vue = this;\n      vue.toggleIniciarDetener = false;\n      vue.toggleReanudar = false;\n    },\n\n    cancelarSimulacion() {\n      let vue = this;\n      vue.toggleIniciarDetener = true;\n      console.log(\"SE DETIENE LA SIMULACION\");\n      clearInterval(vue.myInterval);\n      Simulation.stopSimulation();\n      console.log(vue.fecha_fin_simulacion);\n    },\n\n    async simu() {\n      let vue = this;\n      let response = axios.post(vue.$store.state.appUri + '/algoritmos/replanificacion2/' + vue.fecha_inicio_simulacion.substring(8, 10) + '/' + vue.fecha_inicio_simulacion.substring(5, 7) + '/' + vue.fecha_inicio_simulacion.substring(0, 4) + '/' + vue.fecha_fin_simulacion.substring(8, 10) + '/' + vue.fecha_fin_simulacion.substring(5, 7) + '/' + vue.fecha_fin_simulacion.substring(0, 4) + '/' + Simulation.getIdSimulation());\n      console.log(response.data);\n    },\n\n    notifyVue(verticalAlign, horizontalAlign, color, componente) {\n      //const color = 4;\n      //console.log(color);\n      this.$notify({\n        component: componente,\n        icon: \"tim-icons icon-bell-55\",\n        horizontalAlign: horizontalAlign,\n        verticalAlign: verticalAlign,\n        type: this.type[color],\n        timeout: 0\n      });\n    }\n    /*\r\n    calcularTriangulacion(x1,x2,y1,y2,porcentaje){\r\n        var distanciaX = Math.abs(x1-x2)*porcentaje;\r\n      var distanciaY = Math.abs(y1-y2)*porcentaje;\r\n        var nuevaCoordenada = [];\r\n        if(x1>x2){\r\n        nuevaCoordenada.push(x1-distanciaX);\r\n      }else{\r\n        nuevaCoordenada.push(x1+distanciaX);\r\n      }\r\n        if(y1>y2){\r\n        nuevaCoordenada.push(y1-distanciaY);\r\n      }else{\r\n        nuevaCoordenada.push(y1+distanciaY);\r\n      }\r\n        return nuevaCoordenada.push(0.00);\r\n    } background-color: #1e1e24;\r\n    */\n\n\n  }\n};",{"version":3,"sources":["Maps.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  \r\n   <div class=\"map-container\">\r\n    \r\n    <div class=\"datetime-display\">\r\n      {{ currentDateTime }}\r\n    </div>\r\n    <div class=\"map-search-container\">\r\n      \r\n      <input class=\"search-input\" type=\"text\" placeholder=\"Buscar envío\">\r\n      <input class=\"search-input\" type=\"text\" placeholder=\"Buscar aeropuerto\">\r\n      <input class=\"search-input\" type=\"text\" placeholder=\"Buscar vuelo\">\r\n    </div>\r\n    <div id=\"legend\" class=\"map-legend\">\r\n  <button class=\"legend-toggle\" @click=\"toggleLegend\">\r\n    {{ isLegendOpen ? '▲ Cerrar Leyenda' : '▼ Abrir Leyenda' }}\r\n  </button>\r\n  <ul :style=\"{ display: isLegendOpen ? 'block' : 'none' }\" class=\"legend-content\">\r\n\r\n    <li><span class=\"dot less-50\"></span>Menor a 50%</li>\r\n    <li><span class=\"dot between-50-80\"></span>Entre 50% y 80%</li>\r\n    <li><span class=\"dot greater-80\"></span>Mayor a 80%</li>\r\n    <li><span class=\"icon airplane-icon\"></span>Vuelo</li>\r\n    <li><span class=\"icon airport-icon\"></span>Aeropuerto</li>\r\n  </ul>\r\n</div>\r\n\r\n    \r\n    <MglMap class=\"main-map\" :accessToken=\"accessToken\" \r\n            :mapStyle=\"mapStyle\" :center=\"center\" \r\n            :zoom=\"zoom\" style=\"height:750px!important;\" \r\n            :renderWorldCopies = false\r\n            @onload=\"onMapLoaded\">\r\n\r\n      <MglNavigationControl\r\n        position=\"top-center\">\r\n      </MglNavigationControl> \r\n\r\n      <MglGeojsonLayer\r\n        :sourceId=\"sedes.data.id\"\r\n        :source=\"sedes\"\r\n        :layerId=\"sedesLayer.id\"\r\n        :layer=\"sedesLayer\">\r\n      </MglGeojsonLayer>\r\n\r\n      <MglGeojsonLayer\r\n        :sourceId=\"sedesCount.data.id\"\r\n        :source=\"sedesCount\"\r\n        :layerId=\"sedesLayerCount.id\"\r\n        :layer=\"sedesLayerCount\">\r\n      </MglGeojsonLayer>\r\n\r\n      <MglGeojsonLayer\r\n        :sourceId=\"rutas.data.id\"\r\n        :source=\"rutas\"\r\n        :layerId=\"rutasLayer.id\"\r\n        :layer=\"rutasLayer\">\r\n      </MglGeojsonLayer>\r\n\r\n      <MglGeojsonLayer\r\n        :sourceId=\"rutasCount.data.id\"\r\n        :source=\"rutasCount\"\r\n        :layerId=\"rutasLayerCount.id\"\r\n        :layer=\"rutasLayerCount\">\r\n      </MglGeojsonLayer>\r\n      \r\n    </MglMap>\r\n\r\n\r\n    <!-- <div id=\"map\" style=\"height:750px!important;\"></div> -->\r\n\r\n    \r\n    <div class=\"row\" style=\"margin-top:40px!important\"> \r\n      <div class=\"col-md-3 pr-md-1\">\r\n        <base-input label=\"Fecha Inicio\"\r\n                  type=\"date\"\r\n                  format= \"yyyy-MM-dd\"\r\n                  placeholder=\"Fecha Inicio\"\r\n                  v-model=\"fecha_inicio_simulacion\">\r\n        </base-input>\r\n      </div>\r\n      <div class=\"col-md-3 pr-md-1\">\r\n        <base-input label=\"Fecha Fin\"\r\n                  type=\"date\"\r\n                  format= \"yyyy-MM-dd\"\r\n                  placeholder=\"Fecha Fin\"\r\n                  v-model=\"fecha_fin_simulacion\">\r\n        </base-input>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3\" style=\"margin-top:40px!important\" v-show=\"toggleIniciarDetener\"> \r\n        <b-button  v-b-modal.modal-iniciar slot=\"footer\" type=\"primary\" fill>Iniciar</b-button>\r\n        <b-modal id=\"modal-iniciar\"\r\n            @ok=\"iniciarSimulacion\">\r\n            ¿Deseas iniciar la simulación?\r\n        </b-modal>\r\n      </div>\r\n      <div class=\"col-md-3\" style=\"margin-top:40px!important\" v-show=\"!toggleIniciarDetener\"> \r\n        <b-button  v-b-modal.modal-cancelar slot=\"footer\" type=\"primary\" fill>Cancelar</b-button>\r\n        <b-modal id=\"modal-cancelar\"\r\n            @ok=\"cancelarSimulacion\">\r\n            ¿Deseas cancelar la simulación?\r\n        </b-modal>\r\n      </div>\r\n      <div class=\"col-md-3\" style=\"margin-top:40px!important\" v-show=\"!toggleIniciarDetener && !toggleReanudar\"> \r\n        <b-button  v-b-modal.modal-detener slot=\"footer\" type=\"primary\" fill>Detener</b-button>\r\n        <b-modal id=\"modal-detener\"\r\n            @ok=\"detenerSimulacion\">\r\n            ¿Deseas detener la simulacion?\r\n        </b-modal>\r\n      </div>\r\n      <div class=\"col-md-3\" style=\"margin-top:40px!important\" v-show=\"!toggleIniciarDetener && toggleReanudar\"> \r\n        <b-button  v-b-modal.modal-reanudar slot=\"footer\" type=\"primary\" fill>Reanudar</b-button>\r\n        <b-modal id=\"modal-reanudar\"\r\n            @ok=\"reanudarSimulacion\">\r\n            ¿Deseas reanudar la simulación?\r\n        </b-modal>\r\n      </div>\r\n    </div>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Mapbox from \"mapbox-gl\";\r\nimport {MglMap, MglNavigationControl, MglGeojsonLayer} from \"vue-mapbox\";\r\nimport Mapa from '@/store/map.json';\r\nimport Mapa2 from '@/store/map2.json';\r\nimport axios from 'axios';\r\nimport Authentication from '@/store/authentication.js';\r\nimport Simulation from '@/store/simulation.js';\r\n\r\nexport default {\r\n  components: {\r\n    MglMap,\r\n    MglNavigationControl,\r\n    MglGeojsonLayer\r\n  },\r\n  data() {\r\n    return {\r\n      isLegendOpen: false,\r\n      currentDateTime: new Date().toLocaleString('es-ES', { \r\n        timeZone: 'America/Lima', \r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit', \r\n        minute: '2-digit', \r\n        timeZoneName: 'short' \r\n      }),\r\n      toggleIniciarDetener: true,\r\n      toggleReanudar: false,\r\n      accessToken: this.$store.state.map.token, // your access token. Needed if you using Mapbox maps\r\n      mapStyle: 'mapbox://styles/mapbox/dark-v10',\r\n      center: [5,15],\r\n      zoom: 2,\r\n      sedes:{\r\n        type:'geojson',\r\n        //data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\r\n        data: {\r\n          \"id\" : \"sedes\",\r\n          \"type\": \"FeatureCollection\",\r\n          \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\r\n          \"features\": Mapa.features\r\n        },\r\n        cluster:false,\r\n        clusterMaxZoom: 14,\r\n        clusterRadius: 50\r\n      },\r\n      sedesCount:{\r\n        type:'geojson',\r\n        //data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\r\n        data: {\r\n          \"id\" : \"sedesCount\",\r\n          \"type\": \"FeatureCollection\",\r\n          \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\r\n          \"features\": Mapa.features\r\n        },\r\n        \r\n        cluster:false,\r\n        clusterMaxZoom: 14,\r\n        clusterRadius: 50\r\n      },\r\n      rutas:{\r\n        type:'geojson',\r\n        //data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\r\n        data: {\r\n          \"id\" : \"rutas\",\r\n          \"type\": \"FeatureCollection\",\r\n          \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\r\n          \"features\": Mapa2.features\r\n        },\r\n        cluster:false,\r\n        clusterMaxZoom: 14,\r\n        clusterRadius: 50\r\n      },\r\n      rutasCount:{\r\n        type:'geojson',\r\n        //data: 'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson',\r\n        data: {\r\n          \"id\" : \"rutasCount\",\r\n          \"type\": \"FeatureCollection\",\r\n          \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\r\n          \"features\": Mapa2.features\r\n        },\r\n        cluster:false,\r\n        clusterMaxZoom: 14,\r\n        clusterRadius: 50\r\n      },\r\n      sedesLayer:{\r\n        id: 'sedesLayer',\r\n        type: 'circle',\r\n        source: 'sedes',\r\n        filter: ['has', 'capacidad'],\r\n        paint: {\r\n            'circle-color':'#3b9e6e',\r\n            'circle-radius':26\r\n\r\n        }\r\n      },\r\n      sedesLayerCount:{\r\n        id:'sedesLayerCount',\r\n        type: 'symbol',\r\n        source: 'sedesCount',\r\n        filter: ['has', 'capacidad'],\r\n        layout: {\r\n            'text-field': '{capacidad}',\r\n            'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n            'text-size': 12\r\n        }\r\n      },\r\n      rutasLayer:{\r\n        id: 'rutasLayer',\r\n        type: 'circle',\r\n        source: 'rutas',\r\n        filter: ['has', 'capacidad'],\r\n        paint: {\r\n            'circle-color':'#8965e0',\r\n            'circle-radius':15\r\n\r\n        }\r\n      },\r\n      rutasLayerCount:{\r\n        id:'rutasLayerCount',\r\n        type: 'symbol',\r\n        source: 'rutasCount',\r\n        filter: ['has', 'capacidad'],\r\n        layout: {\r\n            'text-field': '{capacidad}',\r\n            'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n            'text-size': 12\r\n        }\r\n      },\r\n\r\n      myInterval: null,\r\n      myIntervalReplan:null,\r\n\r\n      fecha_inicio_simulacion: null,\r\n      fecha_fin_simulacion: null,\r\n\r\n      type: [\"\", \"info\", \"success\", \"warning\", \"danger\"],\r\n      notifications: {\r\n        topCenter: false\r\n      }\r\n      \r\n    }\r\n  },\r\n  mounted(){\r\n    \r\n    let vue = this;\r\n    this.updateTime();\r\n  },\r\n  destroyed:{\r\n  },\r\n  methods: {\r\n\r\n\r\n    toggleLegend() {\r\n      this.isLegendOpen = !this.isLegendOpen;\r\n    },\r\n\r\n    updateTime() {\r\n\r\n      setInterval(() => {\r\n        this.currentDateTime = new Date().toLocaleString('es-ES', { \r\n          timeZone: 'America/Lima', \r\n          year: 'numeric',\r\n          month: '2-digit',\r\n          day: '2-digit',\r\n          hour: '2-digit', \r\n          minute: '2-digit', \r\n          timeZoneName: 'short'\r\n        });\r\n      }, 1000); },\r\n    onMapLoaded(event) {\r\n      // in component\r\n      this.map = event.map;\r\n      // or just to store if you want have access from other components\r\n      this.$store.map = event.map;\r\n    },\r\n    iniciarSimulacion(){\r\n      let vue = this;\r\n      vue.toggleIniciarDetener = false;\r\n      vue.toggleReanudar = false;\r\n\r\n/*\r\n      vue.myInterval = setInterval(()  =>{\r\n        axios.get(vue.$store.state.appUri + '/sedes/listarSedes')\r\n        .then(function(response){\r\n          console.log(response.data)\r\n          response.data.forEach(element => {  \r\n            Mapa.features.push(\r\n              { \"type\": \"Feature\",\r\n                \"properties\": { \"id\": element.codigoOaci,  \"capacidad\": element.codigoOaci + \":  \" + element.numero_paquetes.toString() },\r\n                \"geometry\": { \"type\": \"Point\", \"coordinates\": [element.coordenadas[1],element.coordenadas[0],0.0]}\r\n              }\r\n            );       \r\n          });\r\n        })\r\n        .catch(function(error){\r\n          console.log(error);\r\n        });\r\n      }, 10000);\r\n*/\r\n\r\n      /*MOSTRAR RUTAS*/\r\n      \r\n      axios.post(vue.$store.state.appUri + '/simulacion/simular/'+ vue.fecha_inicio_simulacion.substring(8,10)+\r\n                                                              '/'+vue.fecha_inicio_simulacion.substring(5,7)+\r\n                                                              '/'+vue.fecha_inicio_simulacion.substring(0,4)+\r\n                                                              '/'+vue.fecha_fin_simulacion.substring(8,10)+\r\n                                                              '/'+vue.fecha_fin_simulacion.substring(5,7)+\r\n                                                              '/'+vue.fecha_fin_simulacion.substring(0,4)+\r\n                                                              '/'+Authentication.getProfile().id)\r\n      .then(function(response){\r\n        Simulation.runSimulation(response.data.simulacion.id);\r\n        console.log(Simulation.getIdSimulation());\r\n\r\n        /*\r\n        axios.post(vue.$store.state.appUri + '/algoritmos/replanificacion2/'  +vue.fecha_inicio_simulacion.substring(8,10)+\r\n                                                                          '/'+vue.fecha_inicio_simulacion.substring(5,7)+\r\n                                                                          '/'+vue.fecha_inicio_simulacion.substring(0,4)+\r\n                                                                          '/'+vue.fecha_fin_simulacion.substring(8,10)+\r\n                                                                          '/'+vue.fecha_fin_simulacion.substring(5,7)+\r\n                                                                          '/'+vue.fecha_fin_simulacion.substring(0,4)+\r\n                                                                          '/'+Simulation.getIdSimulation());  \r\n        */\r\n\r\n        var date = new Date();\r\n        var day = date.getDate();\r\n        var month = date.getMonth() + 1;\r\n        var year = date.getFullYear();\r\n        var hour = date.getUTCHours();\r\n        var min = date.getUTCMinutes();\r\n\r\n        if(hour + 4 >= 24){\r\n          hour= hour + 4 - 24;\r\n        }\r\n\r\n        axios.post(vue.$store.state.appUri + '/algoritmos/replanificacion/'  +vue.fecha_inicio_simulacion.substring(8,10)+\r\n                                                                          '/'+vue.fecha_inicio_simulacion.substring(5,7)+\r\n                                                                          '/'+vue.fecha_inicio_simulacion.substring(0,4)+\r\n                                                                          '/'+hour.toString()+'/'+min.toString()+'/'+Simulation.getIdSimulation());\r\n\r\n\r\n\r\n        /*TIMER REPLANIFICACION*/\r\n        vue.myIntervalReplan = setInterval(()  =>{\r\n\r\n          var date = new Date();\r\n          var day = date.getDate();\r\n          var month = date.getMonth() + 1;\r\n          var year = date.getFullYear();\r\n          var hour = date.getUTCHours();\r\n          var min = date.getUTCMinutes();\r\n          var diaSim;\r\n\r\n          if(hour + 4 >= 24){\r\n            hour= hour + 4 - 24;\r\n            diaSim = Number(vuefecha_inicio_simulacion) + 1;\r\n          }else{\r\n            hour= hour + 4;\r\n          }\r\n\r\n          axios.post(vue.$store.state.appUri + '/algoritmos/replanificacion/'  +diaSim.toString()+//  vue.fecha_inicio_simulacion.substring(8,10)+\r\n                                                                            '/'+vue.fecha_inicio_simulacion.substring(5,7)+\r\n                                                                            '/'+vue.fecha_inicio_simulacion.substring(0,4)+\r\n                                                                            '/'+hour.toString()+'/'+min.toString()+'/'+Simulation.getIdSimulation())\r\n          .then(function(response){\r\n            axios.post(vue.$store.state.appUri + '/paquetes/actualizarEstadoPaquetes/' +day.toString()+\r\n                                                                                    '/'+month.toString()+\r\n                                                                                    '/'+year.toString()+\r\n                                                                                    '/'+hour.toString()+\r\n                                                                                    '/'+min.toString())\r\n          });\r\n        }, 600000);\r\n\r\n\r\n        /*TIMER MAPA*/\r\n        vue.myInterval = setInterval(()  =>{          \r\n\r\n\r\n          axios.get(vue.$store.state.appUri + '/simulacion/mapa/'+Simulation.getIdSimulation())\r\n          .then(function(response2){\r\n\r\n            if(response2.data.c != null){              \r\n              console.log(\"SE DETIENE LA SIMULACION\");\r\n              console.log(response2.data);\r\n              Simulation.stopSimulation();\r\n              clearInterval(vue.myInterval);\r\n              this.notifyVue('top', 'center',4,NotificationTemplatePaqueteError);\r\n            }else{\r\n              console.log(response2.data);\r\n              //Mapa.features = [];\r\n              //Mapa2.features = [];\r\n              \r\n              response2.data.sedes.forEach(element => {               \r\n                \r\n              Mapa.features.push(\r\n                  { \"type\": \"Feature\",\r\n                    \"properties\": { \"id\": element.codigoOaci,  \"capacidad\": element.codigoOaci + \":  \" + Math.abs(element.numero_paquetes).toString() },\r\n                    \"geometry\": { \"type\": \"Point\", \"coordinates\": [element.latitud,element.longitud,0.0]}\r\n                  }\r\n                );       \r\n              });\r\n\r\n\r\n              response2.data.rutasDto.forEach(element => {  \r\n              Mapa2.features.push(\r\n                  { \"type\": \"Feature\",\r\n                    \"properties\": { \"id\": element.id,  \"capacidad\": element.numero_paquetes_ruta.toString() },\r\n                    \"geometry\": { \"type\": \"Point\", \"coordinates\": [element.coordenadas[1],element.coordenadas[0],0.0]}\r\n                  }\r\n                );       \r\n              });\r\n            }\r\n\r\n\r\n          });\r\n        }, 300000);\r\n\r\n      });\r\n\r\n\r\n    },\r\n    detenerSimulacion(){\r\n      let vue = this;\r\n      vue.toggleIniciarDetener = false;\r\n      vue.toggleReanudar = true;\r\n      \r\n    },\r\n    reanudarSimulacion(){\r\n      let vue = this;\r\n      vue.toggleIniciarDetener = false;\r\n      vue.toggleReanudar = false;\r\n    },\r\n    cancelarSimulacion(){\r\n      let vue = this;\r\n      vue.toggleIniciarDetener = true;\r\n      console.log(\"SE DETIENE LA SIMULACION\");\r\n      clearInterval(vue.myInterval);\r\n      Simulation.stopSimulation();\r\n      console.log(vue.fecha_fin_simulacion);\r\n    },\r\n    async simu(){\r\n      let vue = this;\r\n      let response = axios.post(vue.$store.state.appUri + '/algoritmos/replanificacion2/'  +vue.fecha_inicio_simulacion.substring(8,10)+\r\n                                                                                        '/'+vue.fecha_inicio_simulacion.substring(5,7)+\r\n                                                                                        '/'+vue.fecha_inicio_simulacion.substring(0,4)+\r\n                                                                                        '/'+vue.fecha_fin_simulacion.substring(8,10)+\r\n                                                                                        '/'+vue.fecha_fin_simulacion.substring(5,7)+\r\n                                                                                        '/'+vue.fecha_fin_simulacion.substring(0,4)+\r\n                                                                                        '/'+Simulation.getIdSimulation());\r\n        console.log(response.data);  \r\n    },\r\n    notifyVue(verticalAlign, horizontalAlign,color,componente) {\r\n      //const color = 4;\r\n      //console.log(color);\r\n      this.$notify({\r\n        component: componente,\r\n        icon: \"tim-icons icon-bell-55\",\r\n        horizontalAlign: horizontalAlign,\r\n        verticalAlign: verticalAlign,\r\n        type: this.type[color],\r\n        timeout: 0\r\n      });\r\n    }\r\n\r\n\r\n    /*\r\n    calcularTriangulacion(x1,x2,y1,y2,porcentaje){\r\n\r\n      var distanciaX = Math.abs(x1-x2)*porcentaje;\r\n      var distanciaY = Math.abs(y1-y2)*porcentaje;\r\n\r\n      var nuevaCoordenada = [];\r\n\r\n      if(x1>x2){\r\n        nuevaCoordenada.push(x1-distanciaX);\r\n      }else{\r\n        nuevaCoordenada.push(x1+distanciaX);\r\n      }\r\n\r\n      if(y1>y2){\r\n        nuevaCoordenada.push(y1-distanciaY);\r\n      }else{\r\n        nuevaCoordenada.push(y1+distanciaY);\r\n      }\r\n\r\n      return nuevaCoordenada.push(0.00);\r\n    } background-color: #1e1e24;\r\n    */\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.datetime-display {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  color: white;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  z-index: 1001; /* Asegúrate de que esté visible sobre el mapa */\r\n}\r\n\r\n.map-container {\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 100%;\r\n  \r\n}\r\n\r\n.map-header {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  width: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px;\r\n  color: #fff;\r\n  text-align: center;\r\n}\r\n\r\n.map-title {\r\n  font-size: 1.5em;\r\n}\r\n\r\n.map-tagline {\r\n  font-size: 1em;\r\n}\r\n\r\n.map-search-container {\r\n  .map-search-container {\r\n  position: absolute;\r\n  top: 60px;\r\n  left: 10px; /* Ajusta según necesidad */\r\n  z-index: 1000;\r\n  width: 200px; /* Ancho fijo para todos los inputs */\r\n  padding: 10px;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  flex-direction: column; /* Cambio aquí */\r\n  align-items: flex-start; /* Alinear al inicio (izquierda) */\r\n}\r\n}\r\n\r\n.search-input {\r\n  flex: 1;\r\n  margin: 0 5px;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n}\r\n\r\n.main-map {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.map-sidebar {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  z-index: 1000;\r\n  height: 100%;\r\n  width: 300px;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  color: #fff;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n\r\n.brand-title {\r\n  font-size: 1em; /* Ajusta el tamaño como desees */\r\n  color: #fff; /* Color para 'Redex' */\r\n  font-weight: bold;\r\n}\r\n\r\n.brand-title-point {\r\n  font-size: 1em; /* Asegúrate de que sea del mismo tamaño que .brand-title para alineación adecuada */\r\n  color: #00B074; /* Color para el punto */\r\n  font-weight: bold;\r\n}\r\n\r\n.brand-tagline {\r\n  font-size: 1em; /* Ajusta el tamaño del tagline */\r\n  color: #B9BBBD; /* Color para 'Always on Time' */\r\n  font-weight: bold;\r\n  margin-bottom: 199px;\r\n  display: flex;\r\n  align-items: baseline; /* Alinea correctamente el texto y el punto */\r\n  gap: 0.2em; /* Ajusta el espacio entre 'Redex' y el punto */\r\n}\r\n\r\n/* Si deseas que 'Redex.' esté en una sola línea, puedes usar display: flex en el contenedor */\r\n.brand {\r\n  display: flex;\r\n  align-items: baseline; /* Alinea correctamente el texto y el punto */\r\n  gap: 0.2em; /* Ajusta el espacio entre 'Redex' y el punto */\r\n  \r\n  margin-bottom: -5px; /* Ajusta esto para aumentar el espacio entre el título y el subtítulo */\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n.map-legend {\r\n  color: black; /* Cambia el color de texto a negro */\r\n  position: absolute;\r\n  bottom: 120px;\r\n  right: 20px;\r\n  z-index: 1000;\r\n  background: #fff;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.3);\r\n  cursor: pointer;\r\n}\r\n\r\n.legend-toggle {\r\n  background: #333;\r\n  color: #fff;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  display: block;\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n\r\n.legend-content {\r\n  color: black;\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0; /* Remove margin-top when visible */\r\n  display: none; /* Hidden by default */\r\n}\r\n\r\n.legend-content li {\r\n  color: black; \r\n  margin-bottom: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.dot {\r\n\r\n  height: 10px;\r\n  width: 10px;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n}\r\n\r\n.less-50 { background: red; }\r\n.between-50-80 { background: orange; }\r\n.greater-80 { background: green; }\r\n\r\n.icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  display: inline-block;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  margin-right: 10px;\r\n}\r\n\r\n.airplane-icon { background-image: url('/img/avion.png'); }\r\n.airport-icon { background-image: url('/img/ubi.png'); }\r\n\r\n\r\n</style>\r\n"],"sourceRoot":"src/pages"}]}